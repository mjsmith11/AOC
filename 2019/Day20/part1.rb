class Point
    def initialize(x,y)
        @x = x
        @y = y
    end
    def x
        @x
    end
    def y
        @y
    end
    def around
        [Point.new(@x-1,@y), Point.new(@x+1,@y),Point.new(@x,@y-1),Point.new(@x,@y+1)]
    end
    def toString()
        @x.to_s() + "," + @y.to_s()
    end
end
def findLabel(labels, search)
    labels.each do |key, value|
        if (value==search)
            return key
        end
    end
end
def findLabelNotMe(labels, search, me)
    labels.each do |key, value|
        if ((value==search) && (key != me))
            return key
        end
    end
end
def pointFromString(mystr)
    splits = mystr.split(",")
    Point.new(splits[0].to_i(), splits[1].to_i())
end

def lowestScore(scores, openSet)
    min = 10000000
    minKey = ""
    openSet.each do |key, v|
        value = scores[key]
        if (value<min)
            min = value
            minKey = key
        end
    end
    minKey
end

input = %q(                                 T Z     P       J     A       Y           U                             
                                 D Z     C       R     I       Q           D                             
  ###############################.#.#####.#######.#####.#######.###########.###########################  
  #.#.......#...#.................#...#.#.....#.....#.......#.#.......#.....#.....#...................#  
  #.###.#######.###########.#.#.#.###.#.#####.###.#.#.#######.#####.###.#####.#####.#######.###.#.###.#  
  #...#.#...#...#.#.#.......#.#.#.....#.#.......#.#.#.#.....#.......#...................#.#...#.#.#.#.#  
  ###.#.#.#####.#.#.#.#.#.#.###.#######.#.#.#.###.###.#.###.#.#.#.#########.###.#########.#####.###.###  
  #.......#.#.....#.#.#.#.#...#.......#...#.#...#...#.....#.#.#.#.#.......#...#.........#.....#.#.#...#  
  ###.#####.#####.#.#####.#########.###.###.#####.#########.#.#####.#.###.#.###.###.#.###.#######.#.###  
  #...#.....#.#.#...#...#.#.....#.#...#.#...#.....#.....#...#.....#.#...#...#.#...#.#...#...#.....#...#  
  ###.#.###.#.#.###.#.###.###.#.#.###.#.###.#.#.###.#.#.#.#.#.###.#####.#####.#####.#####.###.#######.#  
  #...#.#.#...#.........#.#.#.#.....#.#...#.#.#...#.#.#...#.#.#.#.#...........#.#.....#...#...#...#.#.#  
  ###.###.#.#########.#####.###.###.#.#.#.#######.###.#.#.###.#.#####.#.###.###.#######.#.#.#####.#.#.#  
  #.....#...#.#...#...#.....#.#.#.....#.#.#...#...#...#.#.#.........#.#...#...#.#...#.#.#.....#.#.....#  
  ###.#####.#.###.###.#####.#.#.###.#.###.#.#.#.#####.#####.#######.###.###.###.###.#.###.###.#.###.###  
  #.#.#.#.....#.#.#...........#...#.#...#...#.#.....#.....#.....#...#.#.#.....#.........#...#.#.#.....#  
  #.#.#.###.###.#.#.#########.#.###.#####.#####.#.#####.###.#######.#.#####.###.#########.#####.#####.#  
  #.......#.#.........#.#.#.....#.#.#.#.#...#.#.#...#.#.#.#.#.#...#...#.#.....................#.#.#.#.#  
  ###.###.#.#####.#####.#.#####.#.###.#.#.###.###.###.#.#.###.#.###.###.###.#######.#####.#.###.#.#.#.#  
  #.#...#.#.#.#...#...#...#.#...#.......#...#.#.#...#.....#...#...........#.....#.#...#.#.#.#.........#  
  #.#####.#.#.#####.###.###.###.###.###.#.###.#.###.#.#######.#.#####.#####.#####.#.###.#######.###.###  
  #.#.#.#.........#.#.....#.......#.#.........#.#...#.....#.#...#...#.#.#.........#.#.#.#.....#.#...#.#  
  #.#.#.#.#########.#####.#####.###.#.#.#.#.###.#.#####.#.#.###.#.#.###.#.###.###.###.#.#.###.#.###.#.#  
  #.....#.......#...#.....#.#.....#.#.#.#.#...#.....#...#.....#...#...#.....#.#...#.#.....#...#...#.#.#  
  ###.#####.#######.#####.#.###.#######.#######.#########.###.#.###.#####.#########.###.#####.#####.#.#  
  #...#.#...#.#...#...#.....#.......#.......#.......#.....#...#.#.....#.....#.......#...#.#.#.#.......#  
  #.#.#.###.#.###.#.#####.#####.#########.#######.#######.#########.#####.#####.#######.#.#.#######.###  
  #.#.#.#.......#...#.....#    Y         M       R       H         J     H    #...#.#...#.......#...#.#  
  #.###.#####.###.###.#####    Q         F       C       G         R     Z    ###.#.###.###.#######.#.#  
  #...............#.......#                                                   #.#.......#.....#.......#  
  ###.#.#####.###.#.#.#.###                                                   #.#.#######.#####.#.#.###  
  #...#.#.#...#.....#.#...#                                                 DD....#.#.....#...#.#.#....HG
  ###.###.#####.###.#####.#                                                   ###.#.###.###.#########.#  
DD..#.....#.#.#.#.#...#....CC                                                 #.....#...#.#.#...#.#.#.#  
  #.#.#.###.#.###.#.#######                                                   #.#######.#.#.#.#.#.#.#.#  
  #...#.#.....#...#.#.....#                                                   #.#.#.#.....#...#.#.....#  
  ###########.###.#####.###                                                   #.###.#.#.#####.#######.#  
  #.......#.........#.....#                                                   #.......#...............#  
  #.#####.#.#####.###.###.#                                                   #########################  
  #.#.#.....#...#.#.....#..QE                                               PN........................#  
  ###.###.###.###.#.#######                                                   ###.#.#.###.#.#.#.#.###.#  
  #.....#.#...#...........#                                                   #.#.#.#...#.#.#.#.#...#.#  
  #.#.#.#.###.#####.#.#.###                                                   #.#.###.###.#.#####.###.#  
ER..#.#...#.#.#...#.#.#...#                                                   #.#...#.#...#.#.......#..HZ
  #########.#.###.#########                                                   #.###.#.###.#########.#.#  
  #.....................#..PC                                               FA..#.#.#.#.....#.#.#...#.#  
  #.#####.#.###.#.#.###.#.#                                                   #.#.###########.#.#####.#  
KW....#...#.#...#.#.#...#.#                                                   #.#.#.#.....#.#.......#.#  
  #.###.#####.###.#####.#.#                                                   #.#.#.###.###.#.#########  
  #.#.....#...#.#...#...#.#                                                   #.......#.......#.....#.#  
  #.#.#.#####.#.#.###.#.#.#                                                   #####.#######.#.#.#.###.#  
  #.#.#.#...#.#...#...#...#                                                   #.#...........#...#......ZU
  #######.#####.###########                                                   #.#######.###########.###  
  #...#.#.#.#.....#.......#                                                   #...#.....#...#.....#...#  
  #.###.#.#.###.#.#####.#.#                                                   #.###.###.###.#.###.#####  
XZ....#.#.#.#.#.#.#.#...#.#                                                   #...#.#.#.#.....#.......#  
  #.###.#.#.#.#####.###.#.#                                                   #.#####.#######.###.###.#  
  #...#...#.#.#.#.#.#...#..KW                                               XI..................#...#..CC
  ###.#.#.#.#.#.#.#.###.###                                                   ###################.#.#.#  
  #.....#.................#                                                   #.........#.......#.#.#.#  
  ###.#.#.###.#####.#######                                                   #.#####.#.#.###.#.#######  
RC..#.#.#...#.#.#.....#.#..JC                                               TD..#.....#...#.#.#...#...#  
  #.###########.#######.#.#                                                   #.###.#.#.###.#.#####.###  
  #...#.#.#.........#...#.#                                                   #.#...#.#.#.#...#........PN
  #.###.#.###.###.#.#.#.#.#                                                   #########.#.#.###.#####.#  
  #...........#...#...#...#                                                   #.#.....#.#.#.........#.#  
  #########################                                                   #.#####.###.#############  
  #...............#.......#                                                   #.#.........#.......#....VD
  ###.#.#########.#.###.###                                                   #.###.#.###.#.#.#.#.###.#  
  #.#.#.#...#.........#.#..UD                                               TS....#.#...#...#.#.#.....#  
  #.#.###.#######.#.###.#.#                                                   #.#.#.###.#.###.###.###.#  
  #...#.....#.#...#.#...#.#                                                 AI..#.#...#.#.#.#.#.....#.#  
  #.#####.###.#########.#.#                                                   ###.#.#######.#####.###.#  
FA..#...#.....#...#.#.#...#                                                   #.#.....#...#...#...#....GB
  ###.###.#####.###.#.#####                                                   #.#######.#####.#########  
  #...#.....#..............ZU                                               WA....#...........#.......#  
  #.#.###.#.#.#####.###.#.#                                                   ###.#.#####.###.#.###.###  
  #.#.#...#.#.#.#...#...#.#                                                   #.....#.#.....#.#.#.....#  
  #.#.#.#.#.#.###.#####.###                                                   #.#.###.#######.#.###.#.#  
  #.#.#.#.#.#...#.#.....#.#                                                   #.#.....#.......#...#.#..JC
  #.#.#.###.###.#######.#.#                                                   #.#.###.#.#.###.###.###.#  
TS..#.....#...........#...#                                                   #.#.#.#.#.#...#.....#...#  
  #.#.#######.#.#.#.#######      E         V     X     K             E G      #####.#########.#.#.#.#.#  
  #.#.#.......#.#.#.#.....#      E         D     Z     J             R B      #.#.#.....#.....#.#.#.#.#  
  #.#######.#####.#######.#######.#########.#####.#####.#############.#.#######.#.#.###.###.#####.#####  
  #.#.#.........#...#...#.....#.....#...#.....#...#...#.........#.#...#...............#.#...#.......#.#  
  #.#.#####.###.#####.#####.#####.#.###.#####.#.###.#.#####.#.###.#.#######.#.#.###.###.###.###.#.###.#  
  #.#.........#...#.#.............#.#.....#...#.#...#.#...#.#.#...#...#.....#.#.#...#.#.#...#...#...#.#  
  #.#.###.#.###.###.#####.###.#.#.#####.###.###.#.###.#.#.###.#.#.###.###.#.#.#.#.#.#.###.###.#.###.#.#  
  #.#...#.#.#.....#.......#.#.#.#...#.#...#...#.#.#...#.#.....#.#.....#...#.#.#.#.#.....#.#...#...#...#  
  ###.###.###.###.#########.###.###.#.#.#####.#.#.#.###.#####.#.#.#####.#####.###.#######.#.#######.#.#  
  #.#...#.#...#.....#.............#.#.........#...#...#.#.....#.#.#...#.#.#.#...#...#.#.#.#...#.....#.#  
  #.#####.#######.#############.#.#######.#####.#.###.#.#####.#.###.#.#.#.#.###.#####.#.###########.#.#  
  #.#.....#.............#.#.....#...#.......#.#.#.#.#.#.....#.#.....#.#.....#.#.#.........#.#.#.....#.#  
  #.#.###.###.#.#.#.#####.###.#.###########.#.#####.#.#.#.#########.#.#####.#.###.#########.#.#.#.###.#  
  #...#...#...#.#.#.#.....#...#.......#.......#.#.....#.#.#.#...#...#.#.#.#.................#.#.#.#.#.#  
  ###.###.###.###.#######.#####.#.#########.###.#.#.#.#.###.#.###.###.#.#.#.#.#.#########.###.#####.#.#  
  #.....#.#...#.#.#.............#...#.#.......#.#.#.#.#.......#.#.#.#.#.....#.#...#.#.............#...#  
  #.#.###.#.###.#########.#####.#####.#.#####.#.#.###.###.###.#.###.#.#####.#####.#.#####.#######.#.#.#  
  #.#.#...#...#...#.#.#.#.#.#.#.#...#...#.#.....#.#.....#.#...#...#.......#.#.#.#...#...........#.#.#.#  
  #.#.#.#.#.#####.#.#.#.###.#.#.#.#.#.#.#.#.#######.#.#.###.#.#.#####.#####.#.#.#########.#.#########.#  
  #.#.#.#.#...#.................#.#.#.#.#...#.#...#.#.#.#...#.#...#...#.#.#.#...........#.#.....#.....#  
  ###.###.###########.#########.#.###.#####.#.###.###.#####.#####.###.#.#.#.#.#.###.#.#.###.###.#####.#  
  #.#.#.#.#.........#...#.........#...#...#.....#...#...#...#.#.......#.......#...#.#.#.#.....#.#.....#  
  #.###.#.###.###.#.#####.#.#.###.#####.#####.###.###.#####.#.###.#######.###.#####.#######.###.#####.#  
  #.......#...#.#.#.#...#.#.#.#.....#...........#.....#.....#.....#...#.#...#.....#...#.......#.#.....#  
  #####.###.#.#.###.###.#######.#######.#####.#####.###.###.###.#####.#.###.#.###.#.#.###.#.#######.#.#  
  #.....#...#.#.......................#.....#...#.....#.#.....#.....#.......#.#...#.#...#.#.#.......#.#  
  #################################.#.#####.#########.###.#######.#####.###############################  
                                   X A     K         W   E       M     Q                                 
                                   I A     J         A   E       F     E                                 )
# data ingestion
lines = input.split("\n")
labels = Hash.new
# searching for labeled locations
lines.each_with_index {|line, y| 
    for x in 1...line.length do
        if(lines[y][x] == ".")
            # try up
            if (lines[y-1][x].match(/\p{Upper}/))
                label = lines[y-2][x] + lines[y-1][x]
                labels[Point.new(x,y).toString()] = label
            end
            # try down
            if (lines[y+1][x].match(/\p{Upper}/))
                label = lines[y+1][x] + lines[y+2][x]
                labels[Point.new(x,y).toString()] = label
            end
            # try left
            if (lines[y][x-1].match(/\p{Upper}/))
                label = lines[y][x-2] + lines[y][x-1]
                labels[Point.new(x,y).toString()] = label
            end
            # try right
            if (lines[y][x + 1].match(/\p{Upper}/))
                label = lines[y][x + 1] + lines[y][x+2]
                labels[Point.new(x,y).toString()] = label
            end
        end
    end
}

# This was going to be A*, but the teleporting messes up Manhattan distance as h(x), so it's Dijkstra
start = findLabel(labels,"AA")
goal = findLabel(labels, "ZZ")

openSet = Hash.new
openSet[start] = ""

cameFrom = Hash.new

gScore = Hash.new(1000000)
gScore[start] = 0


while (openSet.length > 0)
    current = lowestScore(gScore, openSet)
    
    if (current == goal)
        print("Part 1: "+gScore[current].to_s())
        break
    end
    openSet.delete(current)
    neighbors = pointFromString(current).around
    # check teleports
    if ((labels.has_key?(current)) && (labels[current] != "AA") && (labels[current] != "ZZ"))
        neighborStr = findLabelNotMe(labels, labels[current], current)
        neighbors.append(pointFromString(neighborStr))
    end
    neighbors.each do |neighbor|
        if (lines[neighbor.y][neighbor.x] == ".")
            tentative_gScore = gScore[current] + 1
            if (tentative_gScore < gScore[neighbor.toString()])
                cameFrom[neighbor.toString()] = current
                gScore[neighbor.toString()] = tentative_gScore
                openSet[neighbor.toString()] = "" 
            end
        end
    end
end

    
