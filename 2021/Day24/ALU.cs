public class ALU {
    public int x;
    public int y;
    public int z;
    public int w;
    public string input;
    private int currentInp;


    public void reset() {
        x=0;
        y=0;
        z=0;
        w=0;
        currentInp = 0;
    }

    public ALU() {
        reset();
    }

    private int getNextInput() {
        int value = Int32.Parse(input[currentInp].ToString());
        currentInp++;
        return value;
    }

    public void execute2() {
        int[] divisors = {1, 1, 1, 1, 26,1, 1, 26,1, 26,26,26,26,26};
        int[] add1 = {13,15,15,11,-7,10,10,-5,15,-3,0,-5,-9,0};
        int[] add2= {6,7,10,2,15,8,1,10,5,3,5,11,12,10};
        for(int i=0; i<14; i++) {
            w=Int32.Parse(input[i].ToString());
            x=z;
            x%=26; // x is peaking from the stack
            z/=divisors[i]; // pop the stack if 26
            x += add1[i];
            if(x!=w) {
                if(add1[i]<10) {Console.WriteLine($"problem {divisors[i]} {add1[i]} {add2[i]} {x} {w}");}
                z = z *26 + w + add2[i]; // push w+add2 to stack
            }
        }

    }

    public void execute() {
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 1;
        x += 13;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 6;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 1;
        x += 15;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 7;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 1;
        x += 15;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 10;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 1;
        x += 11;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 2;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 26;
        x += -7;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 15;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 1;
        x += 10;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 8;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 1;
        x += 10;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 1;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 26;
        x += -5;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 10;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 1;
        x += 15;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 5;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 26;
        x += -3;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 3;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 26;
        x += 0;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 5;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 26;
        x += -5;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 11;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 26;
        x += -9;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 12;
        y *= x;
        z += y;
        w = getNextInput();
        x *= 0;
        x += z;
        x %= 26;
        z /= 26;
        x += 0;
        x = x==w?1:0;
        x = x==0?1:0;
        y *= 0;
        y += 25;
        y *= x;
        y += 1;
        z *= y;
        y *= 0;
        y += w;
        y += 10;
        y *= x;
        z += y;
    }

}