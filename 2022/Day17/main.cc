// C++ program to demonstrate the
// boilerplate code
#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <map>

using namespace std;

string getTestInput() {
    return ">>><<><>><<<>><>>><<<>>><<<><<<>><>><<>>";
}
string getRealInput() {
    return "><<>><<<>><>><<<<>><<>>>><<<<>>><>>><>><><><<<<>><<<>><<<>>>><>>>><<>>>><<>><<<><<<<>>><<<<>>>><<<<>><>>><<<<>><>>><<<>><<>>><<><<<<>><<<>><><>><>>>><<>><<<<><<><<<<><<<><<<>><<<<>><<<<>>><<<>>><<<<>>>><<<<>><<><<<<>>><><<<>>><<<>><<<>>>><<><<>>>><<<<><<>>><<<>><<<<>>><><<><<>><<>>>><>><<<>>>><<>>><>><<<>>><<<<>><<<<>>><<<<>>>><<>>>><>>><<<<>><<<<>>>><<<>><>>>><<>><<>><>><<<<>>><<<>>>><<<>>>><><>>>><<<><<<<>><<<<><<<>>>><<>>>><<<<>><<<<><<><<>>>><<<<>>><<<>>>><<<>>><>>>><<<>><<<<><>>><<<<>><<<<>>><><>>><<>><<<>>><<>>>><>>><<>><<<>>>><<<>><<<>>><><<<<><<<><<<<><<>><<<><<<><<<>><<>>><<>><<<<>>>><>><<<>>>><><<><<<<><<><<<><<>><<<>>>><<<>>>><<<<><>><<<<><<><>><<<<><<>><<<><><<><<>><><<<<><>><<>><<<>><<>>><<>>><><>><>>>><>>><<<<><<<<>><<<>>><<>><<<<>><<><>><<<>><><<<<><>>><<<<>>><>><>>><<><<<<>><<<<>>>><>><<>>>><>>>><<<>>><<<>>>><<<<>><<><<>>><<>><<<<>><>>><<>>><<>>>><<<<>><<<><<<>>><<<<><<<<>><<>>><<<<>>><<<<>>>><<><><<>>>><<<<>>><><><<>><<>>><>>>><>><<<<>><><>>><>><<<>><<>><<<<>><<>>>><><<<<>><<<>>><<><>><>>><<<>><<<<>>><<>>><>>><<<><<<<>><<>>><<>>><<>>><<<<>>>><<<>>><>>><<<>><>>>><<<>>>><<<<><>><<<<>>><<<>><<<<>><<>><<<>>>><<<>><<<<>><<<<><>>>><<<<>><<<<><<<>>><<<<><<<>>><>>><<<>><<>>>><<<><>><>>><<<>><><<<>><<><<<>>><<<<><<<>><<<>>>><>>>><>><<<<>>><<<<>>><>>><<><<<>><<>>><<<>>><<<<>>>><>><<<<>>>><<<>><<<>>>><<>><<<<>>><><<<><<<>>>><>>>><<<><>>><<<<><><<>><<<>>>><<<>>><>>><>>>><<<<>>>><><<<><<>>>><<>>><<<<>>><>>>><<<<>><<<<>>>><<><<<<>><<>><<<><<<<>>>><<<<>>><<<>><<>>>><><<<><<>>><<<<><<<<><>><>>>><<>><<<>>><>><<<>>>><<<>>><<><>><<<>><<<<>>><<<<><><<>>><<<<>>>><<>>>><<>>><<><<>><<>><<>><<<><><<>>>><<<>>>><>>>><<>><<>><<<<>><>>><<<><<>>><>>>><<<>>>><><<<<><<<>>>><<>><<<<>>><<<<><>>><<<><<>>>><<<<>>>><><<<>>><>><<><<>>>><<<>>><>><<<<><<<<>><<>>>><<<>>><><><<<<>>><<<>><<<>>><<>><<<<>>><<<<>>>><>>><>>><<<<>><<>><<<>>><<<<><<><<<<>><>>><<<<>><<<<>><<>><>><<<<>><<<<><>>>><<<><<<>>><><<>><<>><<>>>><<<>>>><<<<><<<<><><<<>>>><<<<><<<<><<><<<>><<<<>>><<<><<>><<<>>><<>>>><<<>><<<<><<<><<<<>>><<<>><<<<>>><<<<>><>>>><>>><<>>><<>><<>><<>><<>>><<<<><<<<>><<<<><<<<>>>><<<>>><>>>><><<>>>><>>><<<>><>>>><<>>><<<<>><<>><<<<>><<>>><<<<><><<>><<>>><<<<>>><<<><<>>><<<>>>><<>><>><<>>>><<<<>>>><><<<<>>>><>>><<>>>><<<<><<><<<<><<<<>><>><<<<><<<>>><<<>><>>><<<<>><<><<<<>>><>>>><<<>>><<<>>><<>>>><<<><>><<<>><<<><>>>><<>><<<<><<<<>>><<<>>>><><><<<>>><><>><<<<>><<><><<>>><>>><<<>>><<>>>><<>><<<>><>>><<>>><<<>><><<<><>><<><<<<><>>>><<<<>>>><>>><<>><<>>><<<<><<>>><<<<>>><<>>><><>>>><>>><>>>><<>><<>>>><>>>><>><<>><<<><<<>>>><<<<><<<<><>><<>>><<<<><<<>><<<><>>><><><<>><<>><>><<>>>><<<<><<><<>>><>><<>>>><<<<>>><<<>><<<>>><<>><<>>>><<<>>>><>>><>><>><<>>><<<<>>><<<<>>><<<><<<<>><<><<<>>><<<<>><<>>>><<<<>>>><<<>>>><<<<>>>><>><<><<>>>><<<<>>><<<<>>>><>>>><<<<><<<><<<<>><>>><>><><<<<>><<<<><<>>>><>>>><<<><<><<>>><<<>>>><<<>>><<<<>>><<>>><>>>><<<<>><<>>><><<<<><<><>>><<<<>>>><>><><<<>>>><>>>><<<<>>><<<>>>><<><>>><>>>><<<><>>>><<<<><<<<>>><>>><<<<>>><<<>>><<>>>><><<>><<<<>>>><<<><>>><>>>><<>>>><<>><<>>><<><<<>>>><<<>>>><<>>>><>>><<<<>>>><<<<>>>><<<<>>><<><<<<><>>>><>><<<><<>><<>><<>>>><<<<>>>><<<><<<>><<<>>><<<>>>><<><<><<<>><<<<>>><<<><<>><<><<>><<>>>><<>>><<<>><<<<><>><<<>>><>>><>><<><><>>><<><>><<<><>>>><<<>>><<<<>>><<<<>>><<><<>>>><>>><<<>>>><<<>><><<<<>><><<>>>><<<<>>><<<><<<<><<<><<>><<<><<<<>>>><><<<>>>><<<<>>>><<<<>>><<>>><<>><<<>>><>>>><><<>><<<<>>>><<>>>><<<>>><<>>><<<>>>><<<>>><<<>>><>>>><<>>><>>>><<<>><<>><<><<<>>><<<><<<<><<>>><<<>>>><<<<>><<>>><<<<>>>><>>><<>><<<<>><<><><<>>><<<<>>><<>><<<>><<>>>><<>><><>>><<<<>>>><>>><<>><>>>><<<<>>>><<<<>>>><><>><<<>>><<<><<><<<><<<<>>>><<><<<>>><>><>>><<<>>>><<<>>><<<>>>><<>>>><>><<<>>>><<><<<>><<<<>>><<><<<>><<<>>>><<<<>>><><<>>>><><>><<<>>><<>><>>>><<<<>><<<>>>><<<>>>><<>><<<<>>><<<>>><<<<>><>>><<<>>><<>><<><<>>><<<><<<<>><<<><<><<<>>>><<<>><>><><<<<>>><<>>><<<>>><<<<>>>><>>><<<>><<<<>><<<<>>>><<<>>>><<>>><<>><<<<>><<<>><<<<>>><<<<>>>><>><<<>>>><>><<<<>><<>><>>>><<<>>><<<<>>>><<>>>><>><>>><><>>><<><<<<>>><<<>>>><<<<>><<>>>><<<>>>><<<>>>><<<<>>><<><<<>>><<<>><<<<>>>><<<>>>><<<<><<<<>>><<<<>><<<>><<><<>>><<<<>>><><<<>><>>>><<<>><<<>><<<>>><>>>><<<<>>><<<>><<>>><<<>>>><<>><<><>>><<<>>>><<<><<><<>><<<>>>><>>>><<<>>><<<<><<<>><<<<>>><<<<>>><<><<>>><<<><<>>>><<<>><<<<>>><<<>>><<><<>>>><>>>><<<>>>><><<<>>><>>>><<>>><>>><<>><<><>>><<>>><>><<<><<<>>>><><<<><<<>>><<>>>><<<><<<<><<<<>>><<<<>>>><>><<<<><<<>>><>>><<><<<<>>><<>><<<<><><<>>><><<><>><<><<<<><<<>>><>>><<<<>><<>><<<><>>>><<<<>>>><<<<>>><><<><<<>>>><<>><<>><>>>><<>>><>>>><<<<>><>>>><>>>><<<<><<<<>><<>>>><<<><<><>>>><<<>>><<<>>><<<><>>>><>>><>>>><<>><<<<>>><<>>>><<>>><<>>><<<><<<><>><<<><>>><<>>>><<>>>><<><<>>><>>>><<<><<<<>>><>><<<<>>><<><<>>>><<<<><<<>>>><<>><<<>>>><>>><<><><<<><<<<>>><<<<>><<<<>><<<<>>><<<>>><<<>>><>><<<><<<><<<>><><<<>>>><<><<<><<<<>>>><>>>><<<><>>>><<<<>><>>>><<>><<>><<<><<<>>>><<<<>>><<<<>>>><>>><<<<>>>><>>><<<<>>>><<<<>>>><>>>><<<<><<<<><<<<>><>>><<<<><>>><<<<>>>><<<<>><<>>><<<<>><<<<><<<<>>>><<<<><<<<>>>><<<<>>>><<<<>>><<><<>>><<<<>>><<<>><<<>>>><<<>><>><<>>>><<<>><<<><<<>>>><<<<>>><<<><<<<>>><<<<>><<>><<>>><<>>>><>>><<><<<>>><<<><<>>><<<>><>><<<><<>>><<<><>>><<<><<><<><<>>><<<<><<<>>><>>><<<>>><<>><<>>><<>><>><<<><<<<><>>>><<<><<><<>>><<<>>>><<<<>>>><<<<><<>>>><<<>>><<<<>>><<<>><<<<>>>><>><><>>>><<>><<<<><<<>>><><>>><><>>><<>><<<<><<>><<<>>><<<><>>>><<<>><<>>>><<<><<>>>><<><<<><<<<>>>><>><<>><<<<>>><<>><<>>>><<<><<<>>><<<>>><<<<>><<<><>><<<<>>>><<<<>><<<<>>>><<<<>>><><<<<>>>><<>><>>><<<<>>><<<<>>>><<>>>><>>>><<>><<<<>><<<<>><<>>>><<<<>>><<>>><<<<>>>><<<<>>>><>><<>>>><<>><><<<<>><<><<<>>><>>><<<<><>>><><<<>>><<><<<>><>><<<<>><><<<<>><<<>><<<<><<<>><>>>><<<>>>><<<>>><<<<>><<<>>><<<><<<><<<>><<<<><<>>>><<<><<>><>>><>>><>><<<>><<<>><<<<>>><<<<>>><<<<><<>><>><<<>>>><<<>>>><>>><>><<<<>>>><<<>>><<<>>>><>><<<<>>><><<<<>>><<><>>><<<<>><>>><<<<>>>><>>><<>>>><<>><>>><<>>><<>><<<><<<<>><>>><<>><<<><><>>>><<>>><<<<>>>><<<><<<<>><>><<<>>><<<>><<<>>>><<<><><<<<>>><<<><<<><<><<>><<>>>><<<<><>>><<<>>>><<<>>>><<<>>>><<<>><>><>>><<<<><<<<>><<<<>>>><>>><<>>>><<<<><<>><>><<><>>>><>>><<<>><<<>><>><<<>><<<><<<<>>>><<<<><<<>><<>><<><<<<><<>>><<<>>>><<<><<<<>><<<><>><<<>>>><<><<>>><<<<>><<<<>>>><>>>><<>>>><<<>>><<><<<>>>><>><<<>>><>><<<>>>><<<<>>>><<<>><>>>><<<<>>><<<<>>><>>><<<>>>><<><<<<><<>>>><>>>><<<>><>><>>><<><><>>><<>>><>>>><<<<>>>><<<<>>><>><<<>><<>><<>><<><<<>>><<<><<<<>>><<<>>>><<>><<<>>>><<>>><<<<>><<>>><<<<><<><><<<<><<<><<<>>>><><<<><>>>><<>>>><<<<>><<<><<>>><<>><<<<>><<<<>><<><>><>>><<<>>>><><<<><<<<>>>><<<<><>>><<><<>>>><>><>>><<<<>>>><>>>><<<<><<>>><>>>><<<<>>>><<<<>>><<<><<<<>>><<<<>>><>>>><>>>><<><<<<><<<>>><><<>>><>>><<<>>><<<>><<>>><<<><<><<<<>>><>>>><<>>>><<<>><<>>>><>>><<><<>><<<>>>><<<><<<<>>>><<<><<>><>>><<>><<<<>><><>>>><<<<>><<>>><<>>>><<><<<<><<>><<><<<<><<<<><<>>>><>><<>>>><>>><<<>>>><<<>><<<>>><<<>><<<<>>><><<><><<<>><<>>><<<>>><>><<><>>><>><<<<>>>><>><<<<>>>><>><<<>>><<>><<>><<>>>><<><<<>>><<<<><>><<<>>>><<>>>><<<<>>><<<<>>>><<<<><<<>>>><<<><<<<><<<<>>>><>><<<>>><<<<><<><<>><<<<>>>><<<<>>>><<<<>>><>>><<>>><>>>><<<<>>>><<>><<><>>>><<>>>><<>><<<<>>>><<<<>>>><<<>>>><<>>><<>>><<<>>>><<>>>><<<><>><<<><<><<>><<<<>>><>>>><<<<>>><><<<>>><<>>>><>>><<>>>><<>>><<>>>><>>><<<<>>><<<><>>><<<<>>>><<<>>><><<<<>><<<<>>><<>>>><<<><><><<<>>><<<>>><>><<<>><<<>>><<<>>>><>>>><<<<>>><>>><<<><>><<>><<<<>>>><<<>><>>><<>>>><<<>>><><<<<>>><<<>>>><>><>>><<><<<>>>><<<<>>><<<>>><<>>><<<>>>><<<<>>><>>>><<<<><<<>>><<<>>>><>><<<>>><<><<<<>><<>><<><<<<><<<><<>>>><<>><<><<<>><<<<>>>><<><<<>>><<<>>><<<<>>><<<<><<<<>><<<><<>>>><<<<>><<<>>><><<>>>><<>>><<<<><<<>><<>><<>><<>><<>>><<<>>>><<>>>><<<>><>>>><<<>><<>>><<<<><<<>>><<<<>><<<>>>><>>>><<<>><<<<><<<>>><>><<<>>>><>><>>><><<<<><<<<>>><<<<>>><<<>>>><<>>>><<<<>>>><<<><<<>>><<>>>><<>>>><<<<>><<>>>><<>>>><<><<<<>>>><>><><<<<>>><<<<>>><<>><<><>>>><<>>>><<<>>><><<>><<>>>><<>>>><<<<>>>><<><<>><<<>><<<><>><>>>><>>><<<>><<<<><<<<><<><<>>>><<<<><>>>><<<<>>><<<<>>>><<<<>>><<<>>><<<<><><<<<>><<<<>>>><<>><>>><<<<><<<>>>><<<>>><>>><<>>>><<<<>>><<>>>><>>>><<<><<<>>>><<>>>><<<<>>><>>><<<><<><><<>><<>>><<><<<<><<>>>><<<><<<><<<>><<<<>><<<>>>><>>><<><<<<>>><>>>><>><<<<>>><<<>>>><>><>><<<><<<<>>><>>>><>>><>><<<<>>><<<<>>>><<>>>><<>>><>>><<><<<>>><<<>><<>>><><>>>><<><>><>><<<><<>>><><<<><<<><>>>><<<>><<>>>><>>><>>>><<<>>>><>>>><<<><<<<>>><<<>><<<>><<<<>><<<>>>><>>>><<<><<<>>><<<<>>>><<>>>><>>><<><<><<<>>>><<><>><>><<<<>><<<><<<>>>><>><>><<<<><<<<><<><<<<>>><<<>><<<><<>>><<>>><<>><<<><<>>>><<><<<<>>>><<<>>>><<>><>>>><<>>>><<<>>>><>>><<<<>>><<<<>>><<<>>><<<>>>><<>>><<>>>><<<><<>>>><<<>>><<<>><>>><<<<>>><<>><<<<>><<<>><<<>>>><<<<>><>>>><>><<<<>>><<>>><><<<<>><<<><<<<><>>><>>>><>><<<>>>><<><<<<>>><>>>><<>>><<<<>><<<><<<>><<<>>><<>>><<<<>>>><<>><>><<<>>><><<>>><>>><<<>><<<><>>><>><<<<><<<>><<<><><<<>>>><<<<>><<>>>><>>>><<>><<<<>><<<><<<><<>>><<<><>><><<<>>><<<<><<<<>>>><<<<><<<>>>><<<><<>>>><<>>>><<<<>><<<><<<<>>><<<<>>><<<>>><>><<>>>><<<><<>><<<<>>>><<<>><>>><<<>>>><<<><<<<><<><<<><><<><<>><<>><<<<><<<<>><<<<>>><><<<<><>><<>><>>><>>>><<<>>><<<>>><<<>>><<<><<<>>>><>>>><<<>><<<>><><<<>>>><<<<>>><<>><<<<>>><<>>><<><>>><<<<><<<>><>>><<>>>><>>><<<<><<<>>><<><<>><<>><<<>><<<<>><<>><>><<>>><><>>><<<>>>><<<>>>><<<<>><<<>>><<>>><<<>>>><<<>>><><<<>><><<>>><<<>>><<<><>>>><>>>><<<>><<<<><><<>><<>>>><><<<<>>>><<<<>>>><<<<>><<<><>>><<<<>>><<<<>>><>><<><>>>><>><<>>>><>>>><<<<>><<<>><><<<>>><><><<<>>>><<<><<>><<>>>><<<<>><<<>>><<>>>><<<<>><<<<>><<>>>><<>>><>><<>><<<<>><<>>>><<><><<<>>><<>><<>>><<<>>><<<>>><<<><<<<>>>><<<<>><<<>><>>><<<<>><><<<<>>><<>>>><<<>>>><<>>>><<<>>>><><<<>>><<<<>>><<>><<<<>>>><<<<>>><<<<>>><<<<>>><>>>><<<>><<<>>>><<<>>>><>><<<<>>>><>>>><>><<<>>>><<<>>>><>>><<><<<<>>>><><<<<>><<<>>>><<<><<<>>><<><<<><<>><<<<>><<<>>><>><<<>>><>>>><>>><<<<>>>><><>><<<>>><<<><<<<>>><><<<><<>><>>>><>>><<<>>>><<<<>>>><<<<>>><<>>><<>>><<<>><<<>>>><<<>>>><><<>><<<><>><<<>>><<<>><<<<><<>>><>>><<>>><<>><>>>><<>><><>>>><<><>><>>><<>>><<<<>><<<>><<>><<><<<<>>><>>><>>>><>>><>>>><<<<>>>><<>>><<<<>>>><<<>><<>><<<>><<<<>>><<>><<>>><<<<>>><>>>><<>>>><<>><<>>><<<>>>><><<<<>>>><<<>>><<><<<<>>>><<><<<<>>>><<>><<<<><>><<>>><<<>>><<>><<<<><<>><<><<<<><";
}
void dump (vector<vector<char>> chamber) {
    for (int y=9900; y<10000; y++) {
        for(int x=0; x<7; x++) {
            cout << chamber[y][x];
        }
        cout << "\n";
    }
    cout << "\n\n";
}

int Part1(int rocks) {
    string inp = getRealInput();
    vector<vector<char>> chamber;
    for(int y=0; y<10000; y++) {
        vector<char> row;
        for(int x=0; x<7; x++) {
            row.push_back('.');
        }
        chamber.push_back(row);
    }
    int top = 10000;
    int nextWind = 0;
    for(int i=0; i<rocks; i++) {
        if (i%5 == 0) {
            // drop @###
            int x = 2;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>0 && chamber[y][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<3 && chamber[y][x+4]=='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y+1][x+1]=='#') { break;}
                if (chamber[y+1][x+2]=='#') {break;}
                if (chamber[y+1][x+3]=='#') { break;}
                // drop
                y++;
                
            }
            top = y<top?y:top;
            chamber[y][x] = '#';
            chamber[y][x+1] = '#';
            chamber[y][x+2] = '#';
            chamber[y][x+3] = '#';
            if (x==4) {
                cout << "- in pos 3 @ " << i << " : "<< y << "\n";
            }
        }
        if (i%5 == 1) {
            // drop  #
            //      ###
            //       @
            int x = 3;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>1 && chamber[y][x-1]=='.' && chamber[y-1][x-2] == '.' && chamber[y-2][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<5 && chamber[y][x+1]=='.' && chamber[y-1][x+2]=='.' && chamber[y-2][x+1] =='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y][x-1]=='#') {break;}
                if (chamber[y][x+1]=='#') {break;}
                // drop
                y++;
            }
            top = (y-2)<top?(y-2):top;
            chamber[y][x] = '#';
            chamber[y-1][x] = '#';
            chamber[y-1][x+1] = '#';
            chamber[y-1][x-1] = '#';
            chamber[y-2][x] = '#';

        }
        if (i%5 == 2) {
            // drop   #
            //        #
            //      @##
            int x = 2;
            int y = top-4;
            while(1) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                if (c=='<' && x>0 && chamber[y][x-1] == '.'&& chamber[y-1][x+1] == '.' && chamber[y-2][x+1] == '.') {
                    x--;
                }
                if (c == '>' && x<4 && chamber[y][x+3] == '.' && chamber[y-1][x+3]=='.' && chamber[y-1][x+3]=='.') {
                    x++;
                }

                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y+1][x+1]=='#') {break;}
                if (chamber[y+1][x+2]=='#') {break;}

                // drop
                y++;
            }
            top = (y-2)<top?(y-2):top;
            chamber[y][x] = '#';
            chamber[y][x+1] = '#';
            chamber[y][x+2] = '#';
            chamber[y-1][x+2] = '#';
            chamber[y-2][x+2] = '#';
        }
        if (i%5 == 3) {
            // drop   #
            //        #
            //        #
            //        @
            int x = 2;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>0 && chamber[y][x-1]=='.'&& chamber[y-1][x-1]=='.'&& chamber[y-2][x-1]=='.'&& chamber[y-3][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<6 && chamber[y][x+1]=='.'&& chamber[y-1][x+1]=='.'&& chamber[y-2][x+1]=='.'&& chamber[y-3][x+1]=='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                // drop
                y++;
                
            }
            top = (y-3)<top?(y-3):top;
            chamber[y][x] = '#';
            chamber[y-1][x] = '#';
            chamber[y-2][x] = '#';
            chamber[y-3][x] = '#';
            
        }
        if (i%5 == 4) {
            // drop   ##
            //        @#
            int x = 2;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>0 && chamber[y][x-1] == '.' && chamber[y-1][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<5 && chamber[y][x+2]=='.' && chamber[y-1][x+2]=='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y+1][x+1]=='#') {break;}
                // drop
                y++;
            }
            top = (y-1)<top?(y-1):top;
            chamber[y][x] = '#';
            chamber[y][x+1] = '#';
            chamber[y-1][x] = '#';
            chamber[y-1][x+1] = '#';
        }
    }
    int rowsWithRocks=0;
    for(int y=0; y<10000; y++) {
        for(int x=0; x<7; x++) {
            if (chamber[y][x]=='#') {
                rowsWithRocks++;
                break;
            }
        }
    }
    return rowsWithRocks;
}
string getKey(int windIndex, int shape, int spot) {
    return to_string(windIndex) + to_string(shape) + to_string(spot);
}
void Part2() {
    map<string, int> seen;
    string inp = getRealInput();
    vector<vector<char>> chamber;
    for(int y=0; y<10000; y++) {
        vector<char> row;
        for(int x=0; x<7; x++) {
            row.push_back('.');
        }
        chamber.push_back(row);
    }
    int top = 10000;
    int nextWind = 0;
    for(int i=0; i<4000; i++) {
        if (i%5 == 0) {
            // drop @###
            int x = 2;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>0 && chamber[y][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<3 && chamber[y][x+4]=='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y+1][x+1]=='#') { break;}
                if (chamber[y+1][x+2]=='#') {break;}
                if (chamber[y+1][x+3]=='#') { break;}
                // drop
                y++;
                
            }
            top = y<top?y:top;
            chamber[y][x] = '#';
            chamber[y][x+1] = '#';
            chamber[y][x+2] = '#';
            chamber[y][x+3] = '#';
            string key = getKey(nextWind, 0, x);
            if (auto it = seen.find(key); it != seen.end()) {
                cout << "Saw " << key << " again " << i << " and " << seen[key] << "\n";
            } else {
                seen[key] = i;
            }
        }
        if (i%5 == 1) {
            // drop  #
            //      ###
            //       @
            int x = 3;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>1 && chamber[y][x-1]=='.' && chamber[y-1][x-2] == '.' && chamber[y-2][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<5 && chamber[y][x+1]=='.' && chamber[y-1][x+2]=='.' && chamber[y-2][x+1] =='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y][x-1]=='#') {break;}
                if (chamber[y][x+1]=='#') {break;}
                // drop
                y++;
            }
            top = (y-2)<top?(y-2):top;
            chamber[y][x] = '#';
            chamber[y-1][x] = '#';
            chamber[y-1][x+1] = '#';
            chamber[y-1][x-1] = '#';
            chamber[y-2][x] = '#';
            string key = getKey(nextWind, 1, x);
            if (auto it = seen.find(key); it != seen.end()) {
                cout << "Saw " << key << " again " << i << " and " << seen[key] << "\n";
            } else {
                seen[key] = i;
            }

        }
        if (i%5 == 2) {
            // drop   #
            //        #
            //      @##
            int x = 2;
            int y = top-4;
            while(1) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                if (c=='<' && x>0 && chamber[y][x-1] == '.'&& chamber[y-1][x+1] == '.' && chamber[y-2][x+1] == '.') {
                    x--;
                }
                if (c == '>' && x<4 && chamber[y][x+3] == '.' && chamber[y-1][x+3]=='.' && chamber[y-1][x+3]=='.') {
                    x++;
                }

                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y+1][x+1]=='#') {break;}
                if (chamber[y+1][x+2]=='#') {break;}

                // drop
                y++;
            }
            top = (y-2)<top?(y-2):top;
            chamber[y][x] = '#';
            chamber[y][x+1] = '#';
            chamber[y][x+2] = '#';
            chamber[y-1][x+2] = '#';
            chamber[y-2][x+2] = '#';
            string key = getKey(nextWind, 2, x);
            if (auto it = seen.find(key); it != seen.end()) {
                cout << "Saw " << key << " again " << i << " and " << seen[key] << "\n";
            } else {
                seen[key] = i;
            }
        }
        if (i%5 == 3) {
            // drop   #
            //        #
            //        #
            //        @
            int x = 2;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>0 && chamber[y][x-1]=='.'&& chamber[y-1][x-1]=='.'&& chamber[y-2][x-1]=='.'&& chamber[y-3][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<6 && chamber[y][x+1]=='.'&& chamber[y-1][x+1]=='.'&& chamber[y-2][x+1]=='.'&& chamber[y-3][x+1]=='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                // drop
                y++;
                
            }
            top = (y-3)<top?(y-3):top;
            chamber[y][x] = '#';
            chamber[y-1][x] = '#';
            chamber[y-2][x] = '#';
            chamber[y-3][x] = '#';
            
        }
        if (i%5 == 4) {
            // drop   ##
            //        @#
            int x = 2;
            int y = top-4;
            while(true) {
                char c = inp[nextWind];
                nextWind++;
                nextWind %= inp.length();
                // wind
                if (c=='<' && x>0 && chamber[y][x-1] == '.' && chamber[y-1][x-1]=='.') {
                    x--;
                }
                if (c == '>' && x<5 && chamber[y][x+2]=='.' && chamber[y-1][x+2]=='.') {
                    x++;
                }
                // can we go down
                if (y==9999) { break; }
                if (chamber[y+1][x]=='#') {break;}
                if (chamber[y+1][x+1]=='#') {break;}
                // drop
                y++;
            }
            top = (y-1)<top?(y-1):top;
            chamber[y][x] = '#';
            chamber[y][x+1] = '#';
            chamber[y-1][x] = '#';
            chamber[y-1][x+1] = '#';
        }
    }
    int rowsWithRocks=0;
    for(int y=0; y<10000; y++) {
        for(int x=0; x<7; x++) {
            if (chamber[y][x]=='#') {
                rowsWithRocks++;
                break;
            }
        }
    }
}
long calc() {
    long trillion = 1000000000000;
    long start = 1705;
    long length = 3430-1705;
    long height = Part1(start+length) - Part1(start);
    //          all cycles           before cycle starts  extra after cycles but start after the cycle starts   remove before cycle
    long res = (trillion-start)/length*height + Part1(start) +          Part1((trillion-start)%length+start+1)                          - Part1(start+1);
    return res;
}
// Driver Code
int main()
{
    std::cout << "Part 1 " << Part1(2022) << "\n";
    Part2();
    // std::cout << "Part 2 " << Part2() << "\n";
    cout << "\n" << calc() << "\n";
    
    return 0;
}
